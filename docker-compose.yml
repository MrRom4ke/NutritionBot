services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nutric_bot_backend
    restart: unless-stopped
    working_dir: /backend
    env_file:
      - ./backend/.env
    environment:
      REDIS_URL: redis://redis:6379
      PYTHONPATH: /backend  # Устанавливаем PYTHONPATH, чтобы Python видел директории
    ports:
      - "8000:8000"
    depends_on:
      - bot
      - alembic
      - db
      - redis
    volumes:
      - ./backend:/backend  # Монтируем папку backend
      - spacy_model_cache:/root/.cache/spacy  # Кэшируем модели spaCy

  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    container_name: nutric_bot_aiogram
    restart: unless-stopped
    env_file:
      - ./bot/.env
    volumes:
      - ./bot:/bot  # Монтируем папку bot
      - whisper_cache:/root/.cache/whisper

  db:
    image: postgres:13
    container_name: nutric_bot_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: nutric_bot_user
      POSTGRES_PASSWORD: secure_password
      POSTGRES_DB: nutric_bot_db
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  alembic:
    build:
      context: .  # Контекст сборки — корневая папка проекта
      dockerfile: ./alembic/Dockerfile  # Dockerfile для Alembic
    container_name: nutric_bot_alembic
    restart: no
    environment:
      DATABASE_URL: postgresql+asyncpg://nutric_bot_user:secure_password@db:5432/nutric_bot_db
    depends_on:
      - db
    volumes:
      - ./alembic:/app/alembic  # Монтируем папку alembic в контейнер
      - ./backend:/app/backend  # Монтируем папку backend в контейнер
    working_dir: /app/alembic  # Рабочая директория для Alembic

  redis:
    image: "redis:6.2"
    command: ["redis-server", "--notify-keyspace-events", "Ex"]
    container_name: "nutric_bot_redis"
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  db_data:
  whisper_cache:
  spacy_model_cache:  # Определяем volume для кэширования моделей spaCy
